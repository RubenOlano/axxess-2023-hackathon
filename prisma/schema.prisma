generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String       @id @default(cuid())
    name          String?
    email         String?      @unique
    phoneNum      String?
    emailVerified DateTime?
    image         String?
    role          Role         @default(Patient)
    accounts      Account[]
    sessions      Session[]
    PatientData   PatientData? @relation(fields: [patientDataId], references: [id])
    patientDataId String?
}

model PatientData {
    id                       String  @id @default(cuid())
    userId                   String
    translatedDocument       String  @db.Text
    originalLanguageDocument String  @db.Text
    doctorId                 String
    visits                   Visit[]
    User                     User[]
    fname                    String
    lname                    String
}

model Visit {
    id                 String      @id @default(cuid())
    patientId          String
    doctorId           String
    patientDataId      String?
    doctorDocument     String      @db.Text
    translatedDocument String      @db.Text
    date               DateTime
    patient            PatientData @relation(fields: [patientId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    id         String   @id @default(cuid())
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum Role {
    Patient
    Doctor
}
